// commands/admin/groupnamelock.js
module.exports = {
  name: "groupnamelock",
  execute(api, threadID, args, event, botState, isMaster) {
    if (!isMaster && !botState.adminList.includes(event.senderID)) {
      return api.sendMessage("ЁЯЪл рдпреЗ рдХрдорд╛рдВрдб рд╕рд┐рд░реНрдл рдорд╛рд╕реНрдЯрд░ рдпрд╛ рдПрдбрдорд┐рдиреНрд╕ рдХреЗ рд▓рд┐рдП рд╣реИ!", threadID);
    }

    const action = args[1]?.toLowerCase();
    const groupName = args.slice(2).join(" ") || botState.lockedGroups[threadID];

    if (!action) {
      return api.sendMessage("ЁЯФН рдпреВрдЬ: #groupnamelock <on/off> [рдЧреНрд░реБрдк_рдирд╛рдо]", threadID);
    }

    if (action === "on") {
      if (!groupName) {
        return api.sendMessage("тЪая╕П рдЧреНрд░реБрдк рдирд╛рдо рдбрд╛рд▓реЛ, рдЬреИрд╕реЗ: #groupnamelock on ramukakakaaka", threadID);
      }
      botState.lockedGroups[threadID] = groupName;
      api.setTitle(groupName, threadID, (err) => {
        if (err) {
          console.error("Group name lock error:", err.message);
          return api.sendMessage("тЪая╕П рдЧреНрд░реБрдк рдирд╛рдо рд▓реЙрдХ рдХрд░рдиреЗ рдореЗрдВ рдЧрд▓рддреАред рдмреЙрдЯ рдХреЛ рдПрдбрдорд┐рди рдкрд░рдорд┐рд╢рди рдЪрд╛рд╣рд┐рдПред", threadID);
        }
        api.sendMessage(`ЁЯФТ рдЧреНрд░реБрдк рдирд╛рдо рд▓реЙрдХ рд╣реЛ рдЧрдпрд╛: ${groupName}`, threadID);
      });
    } else if (action === "off") {
      delete botState.lockedGroups[threadID];
      api.sendMessage("ЁЯФУ рдЧреНрд░реБрдк рдирд╛рдо рдЕрдирд▓реЙрдХ рд╣реЛ рдЧрдпрд╛ред", threadID);
    } else {
      api.sendMessage("тЭМ рдЧрд▓рдд рдПрдХреНрд╢рдиред рдпреВрдЬ: #groupnamelock <on/off> [рдЧреНрд░реБрдк_рдирд╛рдо]", threadID);
    }
  }
};
