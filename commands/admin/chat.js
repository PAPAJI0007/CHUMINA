module.exports = {
  name: 'chat',
  description: 'Toggle chat mode on or off (admin only)',
  aliases: ['chaton', 'chatoff'],
  execute: async (api, threadID, args, event, botState, isMaster) => {
    console.log('Chat command - SenderID:', event.senderID, 'isMaster:', isMaster, 'AdminList:', botState.adminList, 'Args:', args);

    if (!botState.adminList.includes(event.senderID) && !isMaster) {
      api.sendMessage('ЁЯЪл рдпреЗ рдХрдорд╛рдВрдб рд╕рд┐рд░реНрдл рдХрд┐рдВрдЧ рдХреЗ рдЦрд╛рд╕ рдПрдбрдорд┐рдиреНрд╕ рдпрд╛ рдорд╛рд╕реНрдЯрд░ рдХреЗ рд▓рд┐рдП рд╣реИ! ЁЯМЯ', threadID);
      return;
    }

    const command = args[1] ? args[1].toLowerCase() : args[0].toLowerCase().replace(/^#/, '');
    let chatState = botState.chatEnabled || { [threadID]: false };

    if (command === 'on' || command === 'chaton') {
      if (chatState[threadID]) {
        api.sendMessage('ЁЯМЯ AI рдкрд╣рд▓реЗ рд╕реЗ рдЪрд╛рд▓реВ рд╣реИ, рднрд╛рдИ! #ai рдпрд╛ @ai рд╕реЗ рдмрд╛рдд рдХрд░, рдЬреИрд╕реЗ: #ai рд╣рд╛рдп рднрд╛рдИ, рдХреНрдпрд╛ рд╣рд╛рд▓ рд╣реИ? ЁЯШО', threadID);
        return;
      }
      chatState[threadID] = true;
      api.sendMessage('ЁЯФе AI рдЪрд╛рд▓реВ! рдЕрдм #ai рдпрд╛ @ai рд╕реЗ рдмрд╛рдд рдХрд░реЛ, рдЬреИрд╕реЗ: #ai рднрд╛рдИ, рдХреНрдпрд╛ рд╣рд╛рд▓ рд╣реИ? ЁЯШО', threadID);
    } else if (command === 'off' || command === 'chatoff') {
      if (!chatState[threadID]) {
        api.sendMessage('ЁЯМЩ AI рдкрд╣рд▓реЗ рд╕реЗ рдмрдВрдж рд╣реИ, рднрд╛рдИ! рд╕рд┐рд░реНрдл рдХрдорд╛рдВрдбреНрд╕ рдЪрд╛рд▓реВред ЁЯМЯ', threadID);
        return;
      }
      chatState[threadID] = false;
      api.sendMessage('тЭМ AI рдмрдВрдж! рдЕрдм рд╕рд┐рд░реНрдл рдХрд┐рдВрдЧ рдХреЗ рдХрдорд╛рдВрдбреНрд╕ рдХрд╛рдо рдХрд░реЗрдВрдЧреЗред ЁЯМЯ', threadID);
    } else {
      api.sendMessage('тЭУ рдпреВрдЬ рдХрд░реЛ: #chat on рдпрд╛ #chat off (рдпрд╛ #chaton, #chatoff)ред рдХрд┐рдВрдЧ рдХреЗ рдирд┐рдпрдо рд╕рдордЭреЛ! ЁЯШО', threadID);
      return;
    }

    botState.chatEnabled = chatState;
    console.log('Chat state updated:', botState.chatEnabled);

    try {
      const fs = require('fs');
      const { LEARNED_RESPONSES_PATH } = require('../../config/constants');
      botState.learnedResponses.chatEnabled = chatState;
      botState.learnedResponses.adminList = botState.adminList;
      fs.writeFileSync(LEARNED_RESPONSES_PATH, JSON.stringify(botState.learnedResponses, null, 2), 'utf8');
      console.log('Chat state and adminList saved to learned_responses.json');
    } catch (err) {
      console.error('Error saving to learned_responses.json:', err.message);
      api.sendMessage('тЪая╕П рдЪреИрдЯ рд╕реНрдЯреЗрдЯ рд╕реЗрд╡ рдХрд░рдиреЗ рдореЗрдВ рдЧрдбрд╝рдмрдбрд╝! рдХрд┐рдВрдЧ рдХреЛ рдмрддрд╛рдУ! ЁЯМЯ', threadID);
    }
  }
};
