const fs = require('fs');
const path = require('path');
const gTTS = require('gtts');

module.exports = {
  name: 'voice',
  description: '‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§µ‡•â‡§á‡§∏ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡§§‡§æ ‡§π‡•à‡•§',
  async execute(api, threadID, args, event, botState, isMaster) {
    // ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø commandCooldowns[threadID] ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•ã
    if (!botState.commandCooldowns[threadID]) {
      botState.commandCooldowns[threadID] = {};
      console.log(`[DEBUG] commandCooldowns ‡§á‡§®‡§ø‡§∂‡§ø‡§Ø‡§≤‡§æ‡§á‡§ú‡§º ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ threadID: ${threadID}`);
    }

    // ‡§ï‡•Ç‡§≤‡§°‡§æ‡§â‡§® ‡§ö‡•á‡§ï: ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§ë‡§¨‡•ç‡§ú‡•á‡§ï‡•ç‡§ü ‡§î‡§∞ ‡§ü‡§æ‡§á‡§Æ‡§∏‡•ç‡§ü‡•à‡§Ç‡§™ ‡§ö‡•á‡§ï ‡§ï‡§∞‡•á‡§Ç
    if (
      botState.commandCooldowns[threadID].voice &&
      typeof botState.commandCooldowns[threadID].voice === 'object' &&
      Date.now() - botState.commandCooldowns[threadID].voice.timestamp < 30000
    ) {
      console.log(`[DEBUG] ‡§µ‡•â‡§á‡§∏ ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•Ç‡§≤‡§°‡§æ‡§â‡§® ‡§™‡§∞ ‡§π‡•à threadID: ${threadID}`);
      api.sendMessage(
        'üëë ‡§ï‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§®‡§ø‡§Ø‡§Æ‡•ã‡§Ç ‡§ï‡•á ‡§π‡§ø‡§∏‡§æ‡§¨ ‡§∏‡•á ‡§Ö‡§ó‡§≤‡•Ä ‡§µ‡•â‡§á‡§∏ ‡§ï‡§æ ‡§á‡§∏‡•ç‡§§‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡•ã 30 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§ï‡§æ ‡§á‡§Ç‡§§‡§ú‡§º‡§æ‡§∞ ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡§ó‡§æ‡•§ ‡§á‡§® 30 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç ‡§Ü‡§™ ‡§ï‡§ø‡§Ç‡§ó ‡§ï‡•Ä ‡§Æ‡§π‡§æ‡§®‡§§‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§∏‡•ã‡§ö‡•á‡§Ç, ‡§µ‡•ã ‡§ï‡§ø‡§§‡§®‡•á ‡§¶‡§ø‡§≤‡•á‡§∞, ‡§ï‡§ø‡§§‡§®‡•á ‡§Æ‡§π‡§æ‡§®, ‡§ï‡§ø‡§§‡§®‡•á ‡§∂‡•Ç‡§∞‡§µ‡•Ä‡§∞, ‡§ï‡§ø‡§§‡§®‡•á ‡§™‡§∞‡§Æ‡§µ‡•Ä‡§∞ ‡§π‡•à‡§Ç! üëëüî•',
        threadID
      );
      return;
    }

    const text = args.slice(1).join(' ') || '‡§Æ‡•à‡§Ç ‡§π‡•Ä‡§∞‡•ã ‡§π‡•Ç‡§Å';

    // 200 ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§≤‡§ø‡§Æ‡§ø‡§ü
    if (text.length > 200) {
      api.sendMessage('‚ùå ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§≤‡§Ç‡§¨‡§æ ‡§π‡•à! 200 ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§§‡§ï ‡§Ø‡•Ç‡§ú ‡§ï‡§∞‡•ã‡•§', threadID);
      return;
    }

    // "shalender" ‡§î‡§∞ ‡§á‡§∏‡§ï‡•á ‡§µ‡•à‡§∞‡§ø‡§è‡§∂‡§®‡•ç‡§∏ ‡§¨‡•ç‡§≤‡•â‡§ï ‡§ï‡§∞‡•á‡§Ç
    const shalenderRegex = /((sh|ss|s|ch)(h|ai|e|ei|ail|il)?[aeiou]*(l|ll)[aeiou]*(n|nn)?[d]+[r]*(a|ra|ar|adr|ea)?)|(sh(h|ai|e|ei|ail|il|ale)?[aeiou]*(l|ll)[aeiou]*(n|nn)?[d]+[r]*(a|ra|ar|adr|ea|iandr|endra)?)|(s(ale|lender)?[aeiou]*(l|ll)[aeiou]*(n|nn)?[d]+[r]*(a|ra|ar|adr|ea|ndra|ndrea)?)|([\u0936\u0937\u0938\u0938\u094D\u0938][\u093E\u0947\u0948\u094B\u0941\u0942\u093F\u0940\u0949]?[\u0932][\u093E\u0947\u0948\u094B\u0941\u0942\u093F\u0940]*[\u0928]?[\u094D]?[\u0926]+[\u0930]*[\u093E|\u093F\u0940|\u0947\u094D\u0930|\u093F\u092F\u093E]?)|([\u0936\u0938][\u093E\u0947\u0948\u094B\u0941\u0942\u093F\u0940\u0949]?[\u0932][\u093E\u0947\u0948\u094B\u0941\u0942\u093F\u0940]*[\u0928]?[\u094D]?[\u0926]+[\u0930]*[\u093E|\u093F\u0940|\u0947\u094D\u0930|\u093F\u092F\u093E|\u093F\u092F\u093E\u0928\u094D\u0926\u094D\u0930]?)|(s[\u093E|\u0947|\u0948|\u094B|\u0941|\u0942|\u093F|\u0940|\u0949]?[\u0932][\u093E\u0947\u0948\u094B\u0941\u0942\u093F\u0940]*[\u0928]?[\u094D]?[\u0926]+[\u0930]*[\u093E|\u093F\u0940|\u0947\u094D\u0930|\u093F\u092F\u093E|\u0923\u094D\u0921\u094D\u0930|\u0923\u094D\u0921\u094D\u0930\u093F\u092F\u093E]?)/i;
    if (shalenderRegex.test(text)) {
      api.sendMessage('üëë ‡§ï‡§ø‡§Ç‡§ó ‡§ï‡§ø‡§Ç‡§ó ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§∂‡•à‡§≤‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§π‡§ø‡§®‡•ç‡§¶‡•Ç ‡§ï‡§ø‡§Ç‡§ó ‡§π‡•à! üëëüî•', threadID);
      return;
    }

    const audioPath = path.join(__dirname, `../../voice_${threadID}_${Date.now()}.mp3`);

    try {
      const gtts = new gTTS(text, 'hi');
      await new Promise((resolve, reject) => {
        gtts.save(audioPath, (err) => {
          if (err) return reject(err);
          resolve();
        });
      });

      const message = {
        attachment: fs.createReadStream(audioPath)
      };
      await new Promise((resolve, reject) => {
        api.sendMessage(message, threadID, (err) => {
          if (err) return reject(err);
          resolve();
        });
      });

      // ‡§ï‡•Ç‡§≤‡§°‡§æ‡§â‡§® ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
      botState.commandCooldowns[threadID].voice = { timestamp: Date.now() };
      console.log(`[DEBUG] ‡§µ‡•â‡§á‡§∏ ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•Ç‡§≤‡§°‡§æ‡§â‡§® ‡§∏‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ threadID: ${threadID}, timestamp: ${botState.commandCooldowns[threadID].voice.timestamp}`);
      setTimeout(() => {
        if (botState.commandCooldowns[threadID]?.voice) {
          delete botState.commandCooldowns[threadID].voice;
          console.log(`[DEBUG] ‡§µ‡•â‡§á‡§∏ ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•Ç‡§≤‡§°‡§æ‡§â‡§® ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ threadID: ${threadID}`);
        }
      }, 30000);
    } catch (err) {
      console.error(`[ERROR] ‡§µ‡•â‡§á‡§∏ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§ó‡§≤‡§§‡•Ä: ${err.message}`);
      api.sendMessage(`‚ùå ‡§µ‡•â‡§á‡§∏ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§ó‡§≤‡§§‡•Ä ‡§π‡•Å‡§à: ${err.message}`, threadID);
    } finally {
      // ‡§ë‡§°‡§ø‡§Ø‡•ã ‡§´‡§æ‡§á‡§≤ ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡•á‡§Ç
      if (fs.existsSync(audioPath)) {
        fs.unlink(audioPath, (unlinkErr) => {
          if (unlinkErr) console.error(`[ERROR] ‡§ë‡§°‡§ø‡§Ø‡•ã ‡§´‡§æ‡§á‡§≤ ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§ó‡§≤‡§§‡•Ä: ${unlinkErr.message}`);
        });
      }
    }
  }
};
