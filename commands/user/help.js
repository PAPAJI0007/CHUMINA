const fs = require('fs');

module.exports = {
  name: "help",
  aliases: ["commands"],
  execute(api, threadID, args, event, botState, isMaster) {
    try {
      const commands = new Map();
      const commandFolders = ['admin', 'user', 'master'];
      for (const folder of commandFolders) {
        const commandFiles = fs.readdirSync(`./commands/${folder}`).filter(file => file.endsWith('.js'));
        for (const file of commandFiles) {
          try {
            const command = require(`../${folder}/${file}`);
            commands.set(command.name, command);
            if (command.aliases) {
              command.aliases.forEach(alias => commands.set(alias, command));
            }
          } catch (err) {
            console.error(`[ERROR] ${folder} рд╕реЗ рдХрдорд╛рдВрдб ${file} рд▓реЛрдб рдХрд░рдиреЗ рдореЗрдВ рдЕрд╕рдлрд▓:`, err.message);
          }
        }
      }

      const prefix = botState.sessions[event.threadID]?.prefix || '#';
      const helpText = `
By SHALENDER ЁЯСС
===
Admin:
- ${prefix}groupnamelock on/off: рдЧреНрд░реБрдк рд▓реЙрдХ
- ${prefix}nicklock on <nick> / @user: рдирд┐рдХ рд▓реЙрдХ
- ${prefix}nicklock off / @user: рдирд┐рдХ рд▓реЙрдХ рдСрдл
- ${prefix}removenick on/off @everyone/@user: рдирд┐рдХ рд░рд┐рдореВрд╡
- ${prefix}antiout on/off: рдЖрдЙрдЯ рд░реЛрдХ
- ${prefix}kickout @user: рдпреВрдЬрд░ рдХрд┐рдХ
- ${prefix}unsend: рдореИрд╕реЗрдЬ рдЕрдирд╕реЗрдВрдб
- ${prefix}send sticker start/stop: рд╕реНрдЯрд┐рдХрд░ рднреЗрдЬ
- ${prefix}autospam accept: рдСрдЯреЛрд╕реНрдкреИрдо
- ${prefix}automessage accept: рдСрдЯреЛрдореИрд╕реЗрдЬ
- ${prefix}loder target on @user: рд▓реЛрдбрд░ рдЯрд╛рд░рдЧреЗрдЯ
- ${prefix}loder stop: рд▓реЛрдбрд░ рдСрдл
- ${prefix}autoconvo on/off: рдСрдЯреЛрдХрдиреНрд╡реЛ
- ${prefix}chat on/off: рдЪреИрдЯ рдХрдВрдЯреНрд░реЛрд▓
===
User:
- ${prefix}learn <trigger> {response}: рдЯреНрд░рд┐рдЧрд░ рд╕реЗрдЯ
- ${prefix}tid: рдереНрд░реЗрдб ID
- ${prefix}uid / @mention: рдпреВрдЬрд░ ID
- ${prefix}info @mention: рдпреВрдЬрд░ рдЗрдиреНрдлреЛ
- ${prefix}groupinfo: рдЧреНрд░реБрдк рдЗрдиреНрдлреЛ
- ${prefix}pair: рд░реИрдВрдбрдо рдкреЗрдпрд░
- ${prefix}music <song>: рдЧрд╛рдирд╛ рдкреНрд▓реЗ
- ${prefix}aihelp: AI рд╣реЗрд▓реНрдк
- ${prefix}badge / @mention: рд╕реНрдЯрд╛рдЗрд▓рд┐рд╢ рдмреИрдЬ
- ${prefix}hotquote / @mention: рдлрдиреА рдХреЛрдЯ
- ${prefix}mood / @mention: рдореВрдб рд╕реНрдЯреЗрдЯрд╕
- ${prefix}compare @user1 @user2: рдпреВрдЬрд░ рдХреЙрдореНрдкрд┐рдЯрд┐рд╢рди
===
Special:
- ${prefix}mastercommand: рдорд╛рд╕реНрдЯрд░ рдХрдорд╛рдВрдбреНрд╕
- ${prefix}masterid: рдорд╛рд╕реНрдЯрд░ ID
===
      `;
      api.sendMessage(helpText, threadID);
    } catch (e) {
      console.error('[ERROR] help рдХрдорд╛рдВрдб рдореЗрдВ рдЧрд▓рддреА:', e.message);
      api.sendMessage('тЪая╕П Help рдЧрд▓рддреАред', threadID);
    }
  }
};
