const fs = require('fs');
const path = require('path');

module.exports = {
    saveCookies: (userId, cookieContent) => {
        try {
            const cookiePath = path.join(__dirname, `../cookies/${userId}.json`);
            fs.mkdirSync(path.join(__dirname, '../cookies'), { recursive: true }); // Ensure cookies directory exists
            fs.writeFileSync(cookiePath, cookieContent);
            console.log(`Cookies saved for user ${userId} at ${cookiePath}`);
            return true;
        } catch (err) {
            console.error(`Error saving cookies for user ${userId}:`, err);
            throw err;
        }
    },

    loadAbuseMessages: () => {
        try {
            const abusePath = path.join(__dirname, '../abuse.txt');
            if (fs.existsSync(abusePath)) {
                return fs.readFileSync(abusePath, 'utf8')
                    .split('\n')
                    .map(line => line.trim())
                    .filter(line => line.length > 0);
            }
            return [];
        } catch (err) {
            console.error('Error loading abuse messages:', err);
            return [];
        }
    },

    loadWelcomeMessages: () => {
        try {
            const welcomePath = path.join(__dirname, '../welcome.txt');
            if (fs.existsSync(welcomePath)) {
                return fs.readFileSync(welcomePath, 'utf8')
                    .split('\n')
                    .map(line => line.trim())
                    .filter(line => line.length > 0);
            }
            return [
                "{name} рдЖрдпрд╛ рд╣реИ рдЬрд▓рд┐рд▓ рд╣реЛрдиреЗ рдЗрд╕ рдЧреНрд░реБрдк рдореЗрдВ ЁЯМЯ",
                "рджреЗрдЦреЛ рд╕рдм {name} рдХреЛ, рдпреЗ рдЬреЛрдХрд░ рднреА рдпрд╣рд╛рдБ рдРрдб рд╣реЛ рдЧрдпрд╛ ЁЯФе",
                "{name} рддреБрдЭреЗ рдбрд░ рдирд╣реАрдВ рд▓рдЧрд╛ рдпрд╣рд╛рдБ рдРрдб рд╣реЛрдиреЗ рдореЗрдВ ЁЯСЛ",
                "рдЬрд▓рд┐рд▓ рд╣реЛрдиреЗ рдХреА рдЗрддрдиреА рдЬрд▓реНрджреА рдереА рдХрд┐ {name} рдпрд╣рд╛рдБ рдРрдб рд╣реЛ рдЧрдП ЁЯОЙ",
                "{name} рдирд╛рдо рдХреА рдореБрдирд┐рдпрд╛ рдЧреНрд░реБрдк рдореЗрдВ рдРрдб рд╣реБрдИ рд╣реИ ЁЯШИ",
                "рд╕рдиреАрд▓рд┐рдпреЛрди рдХреЛ рдЯрдХреНрдХрд░ рджреЗрдиреЗ рд╡рд╛рд▓рд╛ {name} рдЗрд╕ рдЧреНрд░реБрдк рдореЗрдВ рдРрдб рд╣реЛ рдЪреБрдХрд╛ рд╣реИ ЁЯФе",
                "рдорд┐рдпрд╛рдЦрд▓рд┐рдлрд╛ рддреЛ рдпреВрдВ рд╣реА рдмрджрдирд╛рдо рд╣реИ, рдХрд╣рд░ рдордЪрд╛рдиреЗ рддреЛ {name} рдЖрдпрд╛ рд╣реИ рдЧреНрд░реБрдк рдореЗрдВ ЁЯШИ"
            ];
        } catch (err) {
            console.error('Error loading welcome messages:', err);
            return [];
        }
    }
};
