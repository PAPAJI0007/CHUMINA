module.exports = {
  processNicknameChange: (api, event, botState, threadID, botID) => {
    console.log(`[DEBUG] processNicknameChange called for threadID: ${threadID}`);
    try {
      const queue = botState.nicknameQueues[threadID];
      const changedUserID = event.logMessageData.participant_id; // ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤‡§æ ‡§ó‡§Ø‡§æ
      if (!changedUserID || changedUserID === botID) return;

      // ‡§™‡§π‡§≤‡•á ‡§Ø‡•Ç‡§ú‡§∞-‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§≤‡•â‡§ï ‡§ö‡•á‡§ï
      if (botState.lockedNicknames?.[threadID]?.[changedUserID]) {
        const lockedNickname = botState.lockedNicknames[threadID][changedUserID];
        if (event.logMessageData.nickname !== lockedNickname) {
          api.changeNickname(lockedNickname, threadID, changedUserID, (err) => {
            if (err) {
              console.error(`[ERROR] changeNickname failed for ${changedUserID}: ${err.message}`);
              api.sendMessage('‚ö†Ô∏è ‡§®‡§ø‡§ï‡§®‡•á‡§Æ ‡§∞‡•Ä‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Ö‡§∏‡§´‡§≤‡•§', threadID);
            } else {
              console.log(`[DEBUG] Restored nickname for ${changedUserID} to "${lockedNickname}"`);
              api.getUserInfo(changedUserID, (err, ret) => {
                const name = ret?.[changedUserID]?.name || 'User';
                api.sendMessage(`üîí ${name} ‡§ï‡§æ ‡§®‡§ø‡§ï‡§®‡•á‡§Æ "${lockedNickname}" ‡§∞‡•Ä‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!`, threadID);
              });
            }
          });
        }
        return;
      }

      // ‡§´‡§ø‡§∞ ‡§Æ‡•å‡§ú‡•Ç‡§¶‡§æ ‡§ó‡•ç‡§∞‡•Å‡§™-‡§≤‡•á‡§µ‡§≤ ‡§≤‡•â‡§ï (‡§™‡§π‡§≤‡•á ‡§ú‡•à‡§∏‡§æ)
      if (queue && queue.active) {
        // ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§ö‡•á‡§Ç‡§ú ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§∞‡§ø‡§∏‡•ç‡§ü‡•ã‡§∞, ‡§Ö‡§ó‡§∞ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§≤‡•â‡§ï ‡§®‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à
        if (!queue.changedUsers.has(changedUserID) || queue.nickname !== event.logMessageData.new_nickname) {
          if (!botState.nicknameTimers[threadID]) {
            botState.nicknameTimers[threadID] = setTimeout(() => {
              api.changeNickname(queue.nickname, threadID, changedUserID, (err) => {
                if (err) {
                  console.error(`[ERROR] changeNickname failed for ${changedUserID}: ${err.message}`);
                } else {
                  console.log(`[DEBUG] Restored nickname for ${changedUserID} to "${queue.nickname}"`);
                  queue.changedUsers.add(changedUserID); // ‡§Ö‡§¨ ‡§≤‡•â‡§ï ‡§Æ‡§æ‡§®‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ
                }
                delete botState.nicknameTimers[threadID]; // ‡§ü‡§æ‡§á‡§Æ‡§∞ ‡§π‡§ü‡§æ‡§ì
              });
            }, queue.interval); // 30 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§°‡§ø‡§≤‡•á
          }
        }
      }
    } catch (e) {
      console.error('[ERROR] processNicknameChange error:', e.message);
    }
  }
};
