const Groq = require('groq-sdk');

const groq = new Groq({
  apiKey: process.env.GROQ_API_KEY
});

console.log('Groq API Key:', process.env.GROQ_API_KEY ? 'Set' : 'Not set');
console.log('Groq AI initialized successfully');

async function getAIResponse(message) {
  console.log('AI request - Message:', message);
  try {
    const chatCompletion = await groq.chat.completions.create({
      messages: [
        {
          role: 'system',
          content: '‡§Ü‡§™ ‡§è‡§ï ‡§¶‡•ã‡§∏‡•ç‡§§‡§æ‡§®‡§æ AI ‡§π‡•à‡§Ç ‡§ú‡•ã ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§î‡§∞ ‡§∏‡§æ‡§ß‡§æ‡§∞‡§£ ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§ú‡§µ‡§æ‡§¨ ‡§õ‡•ã‡§ü‡§æ, ‡§Æ‡§∏‡•ç‡§§‡•Ä ‡§≠‡§∞‡§æ, ‡§î‡§∞ Shalender Hindu ‡§ï‡•á ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç ‡§π‡•ã‡•§'
        },
        {
          role: 'user',
          content: message || '‡§Ö‡§∞‡•á ‡§≠‡§æ‡§à, ‡§ï‡•Å‡§õ ‡§Æ‡§∏‡•ç‡§§‡•Ä ‡§ï‡§∞‡•ã ‡§®‡§æ! üòé'
        }
      ],
      model: 'llama-3.1-8b-instant',
      temperature: 0.7,
      max_tokens: 100
    });

    const response = chatCompletion.choices[0]?.message?.content || '‡§Ö‡§∞‡•á ‡§≠‡§æ‡§à, ‡§ï‡•Å‡§õ ‡§ó‡§°‡§º‡§¨‡§°‡§º ‡§π‡•ã ‡§ó‡§à, ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§¨‡•ã‡§≤‡•ã! üòú';
    console.log('AI response:', response);
    return response;
  } catch (err) {
    console.error('Groq API error:', err.message);
    return '‚ö†Ô∏è ‡§ì‡§π‡•ã, ‡§ï‡•Å‡§õ ‡§§‡•ã ‡§ó‡§°‡§º‡§¨‡§°‡§º ‡§π‡•à! ‡§•‡•ã‡§°‡§º‡§æ ‡§∞‡•Å‡§ï, ‡§´‡§ø‡§∞ ‡§ü‡•ç‡§∞‡§æ‡§à ‡§ï‡§∞! üòÖ';
  }
}

module.exports = { getAIResponse };
